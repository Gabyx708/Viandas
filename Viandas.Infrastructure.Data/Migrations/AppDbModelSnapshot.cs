// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Viandas.Infrastructure.Data.Db;

#nullable disable

namespace Viandas.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDb))]
    partial class AppDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.DishModel", b =>
                {
                    b.Property<string>("DishID")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DishID");

                    b.HasIndex("UserID");

                    b.ToTable("Dishes", (string)null);
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.MenuModel", b =>
                {
                    b.Property<string>("MenuID")
                        .HasColumnType("text");

                    b.Property<DateTime>("ConsumptionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("OrderDeadLine")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserResponsibleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MenuID");

                    b.HasIndex("UserResponsibleId");

                    b.ToTable("Menus", (string)null);
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.MenuOptionModel", b =>
                {
                    b.Property<string>("MenuID")
                        .HasColumnType("text");

                    b.Property<string>("DishID")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("RequestedQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.HasKey("MenuID", "DishID");

                    b.HasIndex("DishID");

                    b.ToTable("MenuOptions", (string)null);
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.OrderModel", b =>
                {
                    b.Property<string>("OrderID")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DiscountID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MenuModelMenuID")
                        .HasColumnType("text");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrderID");

                    b.HasIndex("DiscountID");

                    b.HasIndex("MenuModelMenuID");

                    b.HasIndex("UserID");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.UserModel", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EncryptedPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rol")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserNickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserID");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModels.OrderItemModel", b =>
                {
                    b.Property<string>("OrderID")
                        .HasColumnType("text");

                    b.Property<string>("MenuID")
                        .HasColumnType("text");

                    b.Property<string>("DishID")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Units")
                        .HasColumnType("integer");

                    b.HasKey("OrderID", "MenuID", "DishID");

                    b.HasIndex("MenuID", "DishID");

                    b.ToTable("itemsDeOrdenes", (string)null);
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModels.OrderModels.DiscountModel", b =>
                {
                    b.Property<string>("DiscountID")
                        .HasColumnType("text");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DiscountID");

                    b.HasIndex("UserID");

                    b.ToTable("Discount", (string)null);
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModels.OrderModels.OrderTransitionModel", b =>
                {
                    b.Property<string>("OrderID")
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<int>("FromStatus")
                        .HasColumnType("integer");

                    b.Property<int>("ToStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.HasKey("OrderID", "UserID", "FromStatus", "ToStatus");

                    b.HasIndex("UserID");

                    b.ToTable("OrderTransitions");
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.DishModel", b =>
                {
                    b.HasOne("Viandas.Infrastructure.Data.EntityModel.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.MenuModel", b =>
                {
                    b.HasOne("Viandas.Infrastructure.Data.EntityModel.UserModel", "Responsible")
                        .WithMany()
                        .HasForeignKey("UserResponsibleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Responsible");
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.MenuOptionModel", b =>
                {
                    b.HasOne("Viandas.Infrastructure.Data.EntityModel.DishModel", "Dish")
                        .WithMany("Options")
                        .HasForeignKey("DishID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Viandas.Infrastructure.Data.EntityModel.MenuModel", "Menu")
                        .WithMany("Options")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.OrderModel", b =>
                {
                    b.HasOne("Viandas.Infrastructure.Data.EntityModels.OrderModels.DiscountModel", "DiscountModel")
                        .WithMany("OrderModels")
                        .HasForeignKey("DiscountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Viandas.Infrastructure.Data.EntityModel.MenuModel", null)
                        .WithMany("Orders")
                        .HasForeignKey("MenuModelMenuID");

                    b.HasOne("Viandas.Infrastructure.Data.EntityModel.UserModel", "UserModel")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscountModel");

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModels.OrderItemModel", b =>
                {
                    b.HasOne("Viandas.Infrastructure.Data.EntityModel.OrderModel", "OrderModel")
                        .WithMany("Items")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Viandas.Infrastructure.Data.EntityModel.MenuOptionModel", "MenuOptionModel")
                        .WithMany("OrderItemModels")
                        .HasForeignKey("MenuID", "DishID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuOptionModel");

                    b.Navigation("OrderModel");
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModels.OrderModels.DiscountModel", b =>
                {
                    b.HasOne("Viandas.Infrastructure.Data.EntityModel.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModels.OrderModels.OrderTransitionModel", b =>
                {
                    b.HasOne("Viandas.Infrastructure.Data.EntityModel.OrderModel", "OrderModel")
                        .WithMany("Transitions")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Viandas.Infrastructure.Data.EntityModel.UserModel", "UserModel")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderModel");

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.DishModel", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.MenuModel", b =>
                {
                    b.Navigation("Options");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.MenuOptionModel", b =>
                {
                    b.Navigation("OrderItemModels");
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.OrderModel", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModel.UserModel", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Viandas.Infrastructure.Data.EntityModels.OrderModels.DiscountModel", b =>
                {
                    b.Navigation("OrderModels");
                });
#pragma warning restore 612, 618
        }
    }
}
